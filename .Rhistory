test <- wilcox.test(ea_samples_aa_hotspots, aa_samples_aa_hotspots, paired = FALSE)
test$p.value
test
ea_samples_ea_hotspots <- c()
aa_samples_ea_hotspots <- c()
for (sample in ea_samples){
sub <- subset(data_ea, Sample == sample)
count <- 0
for (i in 1:nrow(ea_hotspots_unique)){
sub2 <- subset(sub, Chromosome == ea_hotspots_unique$chromosome[[i]])
sub3 <- subset(sub2, Start_Position %in% ea_hotspots_unique$lowerbound[[i]]:ea_hotspots_unique$upperbound[[i]])
count <- count + nrow(sub3)
}
ea_samples_ea_hotspots <- c(ea_samples_ea_hotspots, count)
}
for (sample in aa_samples){
sub <- subset(data_aa, Sample == sample)
count <- 0
for (i in 1:nrow(ea_hotspots_unique)){
sub2 <- subset(sub, Chromosome == ea_hotspots_unique$chromosome[[i]])
sub3 <- subset(sub2, Start_Position %in% ea_hotspots_unique$lowerbound[[i]]:ea_hotspots_unique$upperbound[[i]])
count <- count + nrow(sub3)
}
aa_samples_ea_hotspots <- c(aa_samples_ea_hotspots, count)
}
test.aa <- wilcox.test(ea_samples_ea_hotspots, aa_samples_ea_hotspots, paired = FALSE)
test.aa
df <- data.frame("EA Hotspots" = c(ea_samples_ea_hotspots, aa_samples_ea_hotspots),
"AA Hotspots" = c(ea_samples_aa_hotspots, aa_samples_aa_hotspots),
"Race" = c(rep("EA", length(ea_samples_ea_hotspots), rep("AA", length(aa_samples_aa_hotspots)))))
df <- data.frame("EA Hotspots" = c(ea_samples_ea_hotspots, aa_samples_ea_hotspots),
"AA Hotspots" = c(ea_samples_aa_hotspots, aa_samples_aa_hotspots),
"Race" = c(rep("EA", length(ea_samples_ea_hotspots)), rep("AA", length(aa_samples_aa_hotspots))))
df <- data.frame("EA_Hotspots" = c(ea_samples_ea_hotspots, aa_samples_ea_hotspots),
"AA_Hotspots" = c(ea_samples_aa_hotspots, aa_samples_aa_hotspots),
"Race" = c(rep("EA", length(ea_samples_ea_hotspots)), rep("AA", length(aa_samples_aa_hotspots))))
plot <- ggplot(df, aes(x = EA_Hotspots, y = AA_Hotspots)) +
geom_point(aes(color = Race))
plot
plot <- ggplot(df, aes(x = EA_Hotspots, y = AA_Hotspots)) +
geom_jitter(aes(color = Race))
plot
ea_samples_aa_hotspots <- c()
aa_samples_aa_hotspots <- c()
for (sample in ea_samples){
sub <- subset(data_ea, Sample == sample)
count <- 0
for (i in 1:nrow(aa_hotspots)){
sub2 <- subset(sub, Chromosome == aa_hotspots$chromosome[[i]])
sub3 <- subset(sub2, Start_Position %in% aa_hotspots$lowerbound[[i]]:aa_hotspots$upperbound[[i]])
count <- count + nrow(sub3)
}
ea_samples_aa_hotspots <- c(ea_samples_aa_hotspots, count)
}
for (sample in aa_samples){
sub <- subset(data_aa, Sample == sample)
count <- 0
for (i in 1:nrow(aa_hotspots)){
sub2 <- subset(sub, Chromosome == aa_hotspots$chromosome[[i]])
sub3 <- subset(sub2, Start_Position %in% aa_hotspots$lowerbound[[i]]:aa_hotspots$upperbound[[i]])
count <- count + nrow(sub3)
}
aa_samples_aa_hotspots <- c(aa_samples_aa_hotspots, count)
}
test.aa <- wilcox.test(ea_samples_aa_hotspots, aa_samples_aa_hotspots, paired = FALSE)
test.aa
ea_samples_ea_hotspots <- c()
aa_samples_ea_hotspots <- c()
for (sample in ea_samples){
sub <- subset(data_ea, Sample == sample)
count <- 0
for (i in 1:nrow(ea_hotspots)){
sub2 <- subset(sub, Chromosome == ea_hotspots$chromosome[[i]])
sub3 <- subset(sub2, Start_Position %in% ea_hotspots$lowerbound[[i]]:ea_hotspots$upperbound[[i]])
count <- count + nrow(sub3)
}
ea_samples_ea_hotspots <- c(ea_samples_ea_hotspots, count)
}
for (sample in aa_samples){
sub <- subset(data_aa, Sample == sample)
count <- 0
for (i in 1:nrow(ea_hotspots)){
sub2 <- subset(sub, Chromosome == ea_hotspots$chromosome[[i]])
sub3 <- subset(sub2, Start_Position %in% ea_hotspots$lowerbound[[i]]:ea_hotspots$upperbound[[i]])
count <- count + nrow(sub3)
}
aa_samples_ea_hotspots <- c(aa_samples_ea_hotspots, count)
}
test.ea <- wilcox.test(ea_samples_ea_hotspots, aa_samples_ea_hotspots, paired = FALSE)
test.ea
df <- data.frame("EA_Hotspots" = c(ea_samples_ea_hotspots, aa_samples_ea_hotspots),
"AA_Hotspots" = c(ea_samples_aa_hotspots, aa_samples_aa_hotspots),
"Race" = c(rep("EA", length(ea_samples_ea_hotspots)), rep("AA", length(aa_samples_aa_hotspots))))
plot <- ggplot(df, aes(x = EA_Hotspots, y = AA_Hotspots)) +
geom_jitter(aes(color = Race))
plot
aa_df <- data.frame("Count" = c(ea_samples_aa_hotspots, aa_samples_aa_hotspots),
"Race" = c(rep("EA", length(ea_samples_ea_hotspots)), rep("AA", length(aa_samples_aa_hotspots))))
aa_plot <- ggplot(aa_df, aes(y = Count, group = Race)) +
geom_boxplot(aes(fill = Race))
aa_plot <- ggplot(aa_df, aes(y = Count, group = Race)) +
geom_boxplot(aes(fill = Race))
aa_plot
aa_plot <- ggplot(aa_df, aes(y = Count, group = Race)) +
geom_violin(aes(fill = Race))
aa_plot
aa_plot <- ggplot(aa_df, aes(y = Count, x = Race)) +
geom_violin(aes(fill = Race), trim = FALSE) +
ylab("Mutations per Sample") +
scale_fill_manual(values = c("coral4", "coral3")) +
theme_classic()+
xlab(NULL) +
theme(axis.text.x = element_text(vjust = 0.5, hjust=0.5, size = 12),
axis.title.y = element_text(size = 12), axis.text.y = element_text(size = 12), title = element_text(size = 12),
legend.position = "none", plot.title= element_text(size = 11)) +
#geom_signif(comparisons=list(c("Hotspots", "Non-Hotspots")), annotations="***",
#            y_position = 4, tip_length = 0, vjust=0.5)
aa_plot
aa_plot <- ggplot(aa_df, aes(y = Count, x = Race)) +
geom_violin(aes(fill = Race), trim = FALSE) +
ylab("Mutations per Sample") +
scale_fill_manual(values = c("coral4", "coral3")) +
theme_classic()+
xlab(NULL) +
theme(axis.text.x = element_text(vjust = 0.5, hjust=0.5, size = 12),
axis.title.y = element_text(size = 12), axis.text.y = element_text(size = 12), title = element_text(size = 12),
legend.position = "none", plot.title= element_text(size = 11))
#geom_signif(comparisons=list(c("Hotspots", "Non-Hotspots")), annotations="***",
#            y_position = 4, tip_length = 0, vjust=0.5)
aa_plot
test.ea <- wilcox.test(ea_samples_ea_hotspots, aa_samples_ea_hotspots, paired = FALSE)
test.ea
test.aa
aa_plot <- ggplot(aa_df, aes(y = Count, x = Race)) +
geom_violin(aes(fill = Race), trim = FALSE) +
ylab("Mutations per Sample") +
scale_fill_manual(values = c("turqouise4", "turquoise3")) +
theme_classic()+
xlab(NULL) +
theme(axis.text.x = element_text(vjust = 0.5, hjust=0.5, size = 12),
axis.title.y = element_text(size = 12), axis.text.y = element_text(size = 12), title = element_text(size = 12),
legend.position = "none", plot.title= element_text(size = 11))
geom_signif(comparisons=list(c("AA", "EA")), annotations="**, p = 0.007587",
y_position = 4, tip_length = 0, vjust=0.5)
aa_plot
aa_plot <- ggplot(aa_df, aes(y = Count, x = Race)) +
geom_violin(aes(fill = Race), trim = FALSE) +
ylab("Mutations per Sample") +
scale_fill_manual(values = c("turquoise4", "turquoise3")) +
theme_classic()+
xlab(NULL) +
theme(axis.text.x = element_text(vjust = 0.5, hjust=0.5, size = 12),
axis.title.y = element_text(size = 12), axis.text.y = element_text(size = 12), title = element_text(size = 12),
legend.position = "none", plot.title= element_text(size = 11)) +
geom_signif(comparisons=list(c("AA", "EA")), annotations="**, p = 0.007587",
y_position = 4, tip_length = 0, vjust=0.5)
aa_plot
aa_plot <- ggplot(aa_df, aes(y = Count, x = Race)) +
geom_violin(aes(fill = Race), trim = FALSE) +
ylab("Mutations per Sample") +
scale_fill_manual(values = c("turquoise4", "turquoise3")) +
theme_classic()+
xlab(NULL) +
theme(axis.text.x = element_text(vjust = 0.5, hjust=0.5, size = 12),
axis.title.y = element_text(size = 12), axis.text.y = element_text(size = 12), title = element_text(size = 12),
legend.position = "none", plot.title= element_text(size = 11)) +
geom_signif(comparisons=list(c("AA", "EA")), annotations="**, p = 0.007587",
y_position = 8.5, tip_length = 0, vjust=0.5)
aa_plot
aa_plot <- ggplot(aa_df, aes(y = Count, x = Race)) +
geom_violin(aes(fill = Race), trim = FALSE) +
ylab("Mutations per Sample") +
scale_fill_manual(values = c("turquoise4", "turquoise3")) +
theme_classic()+
xlab(NULL) +
theme(axis.text.x = element_text(vjust = 0.5, hjust=0.5, size = 12),
axis.title.y = element_text(size = 12), axis.text.y = element_text(size = 12), title = element_text(size = 12),
legend.position = "none", plot.title= element_text(size = 11)) +
geom_signif(comparisons=list(c("AA", "EA")), annotations="**, p = 0.007587",
y_position = 9, tip_length = 0, vjust=0.75)
aa_plot
aa_plot <- ggplot(aa_df, aes(y = Count, x = Race)) +
geom_violin(aes(fill = Race), trim = FALSE) +
ylab("Mutations per Sample") +
scale_fill_manual(values = c("turquoise4", "turquoise3")) +
theme_classic()+
xlab(NULL) +
theme(axis.text.x = element_text(vjust = 0.5, hjust=0.5, size = 12),
axis.title.y = element_text(size = 12), axis.text.y = element_text(size = 12), title = element_text(size = 12),
legend.position = "none", plot.title= element_text(size = 11)) +
geom_signif(comparisons=list(c("AA", "EA")), annotations="**, p = 0.007587",
y_position = 9, tip_length = 0, vjust=0.2)
aa_plot
aa_plot <- ggplot(aa_df, aes(y = Count, x = Race)) +
geom_violin(aes(fill = Race), trim = FALSE) +
ylab("Mutations per Sample") +
scale_fill_manual(values = c("turquoise4", "turquoise3")) +
theme_classic()+
xlab(NULL) +
theme(axis.text.x = element_text(vjust = 0.5, hjust=0.5, size = 12),
axis.title.y = element_text(size = 12), axis.text.y = element_text(size = 12), title = element_text(size = 12),
legend.position = "none", plot.title= element_text(size = 11)) +
geom_signif(comparisons=list(c("AA", "EA")), annotations="**, p = 0.007587",
y_position = 9.5, tip_length = 0, vjust=0.1)
aa_plot
test.ea
ea_plot <- ggplot(ea_df, aes(y = Count, x = Race)) +
geom_violin(aes(fill = Race), trim = FALSE) +
ylab("Mutations per Sample") +
scale_fill_manual(values = c("turquoise4", "turquoise3")) +
theme_classic()+
xlab(NULL) +
theme(axis.text.x = element_text(vjust = 0.5, hjust=0.5, size = 12),
axis.title.y = element_text(size = 12), axis.text.y = element_text(size = 12), title = element_text(size = 12),
legend.position = "none", plot.title= element_text(size = 11)) +
geom_signif(comparisons=list(c("AA", "EA")), annotations="p = 0.141",
y_position = 9.5, tip_length = 0, vjust=0.1)
ea_plot
ea_df <- data.frame("Count" = c(ea_samples_ea_hotspots, aa_samples_ea_hotspots),
"Race" = c(rep("EA", length(ea_samples_ea_hotspots)), rep("AA", length(aa_samples_aa_hotspots))))
ea_plot <- ggplot(ea_df, aes(y = Count, x = Race)) +
geom_violin(aes(fill = Race), trim = FALSE) +
ylab("Mutations per Sample") +
scale_fill_manual(values = c("turquoise4", "turquoise3")) +
theme_classic()+
xlab(NULL) +
theme(axis.text.x = element_text(vjust = 0.5, hjust=0.5, size = 12),
axis.title.y = element_text(size = 12), axis.text.y = element_text(size = 12), title = element_text(size = 12),
legend.position = "none", plot.title= element_text(size = 11)) +
geom_signif(comparisons=list(c("AA", "EA")), annotations="p = 0.141",
y_position = 9.5, tip_length = 0, vjust=0.1)
ea_plot
ea_plot <- ggplot(ea_df, aes(y = Count, x = Race)) +
geom_violin(aes(fill = Race), trim = FALSE) +
ylab("Mutations per Sample") +
scale_fill_manual(values = c("turquoise4", "turquoise3")) +
theme_classic()+
xlab(NULL) +
theme(axis.text.x = element_text(vjust = 0.5, hjust=0.5, size = 12),
axis.title.y = element_text(size = 12), axis.text.y = element_text(size = 12), title = element_text(size = 12),
legend.position = "none", plot.title= element_text(size = 11)) +
geom_signif(comparisons=list(c("AA", "EA")), annotations="p = 0.141",
y_position = 15, tip_length = 0, vjust=0.1)
ea_plot
ea_plot <- ggplot(ea_df, aes(y = Count, x = Race)) +
geom_violin(aes(fill = Race), trim = FALSE) +
ylab("Mutations per Sample") +
scale_fill_manual(values = c("firebrick4", "firebrick3")) +
theme_classic()+
xlab(NULL) +
theme(axis.text.x = element_text(vjust = 0.5, hjust=0.5, size = 12),
axis.title.y = element_text(size = 12), axis.text.y = element_text(size = 12), title = element_text(size = 12),
legend.position = "none", plot.title= element_text(size = 11)) +
geom_signif(comparisons=list(c("AA", "EA")), annotations="p = 0.141",
y_position = 15, tip_length = 0, vjust=0.1)
ea_plot
aa_plot
ea_plot
plot(1:8, c(10,6,8,12,11,7,9,13))
knitr::opts_chunk$set(echo = TRUE)
data <- read.csv("E:\\EAS 509\\Final Exam\\us_employment.csv")
View(data)
unique(data$Series_ID)
data <- read.csv("E:\\EAS 509\\Final Exam\\us_employment.csv")
data <- subset(data, Series_ID == "TEMPHELPN")
View(data)
data <- read.csv("E:\\EAS 509\\Final Exam\\us_employment.csv")
data <- subset(data, Series_ID == "TEMPHELPN")
data <- na.omit(data)
View(data)
stl <- data %>%
model(stl = STL(Employed))
knitr::opts_chunk$set(echo = TRUE)
library(tibble)
library(ggplot2)
library(lubridate)
stl <- data %>%
model(stl = STL(Employed))
knitr::opts_chunk$set(echo = TRUE)
library(tibble)
library(ggplot2)
library(lubridate)
library(tidyr)
library(dplyr)
stl <- data %>%
model(stl = STL(Employed))
knitr::opts_chunk$set(echo = TRUE)
library(tibble)
library(ggplot2)
library(lubridate)
library(tidyr)
library(dplyr)
library(tsibble)
install.packages("tsibble")
knitr::opts_chunk$set(echo = TRUE)
library(tibble)
library(ggplot2)
library(lubridate)
library(tidyr)
library(dplyr)
library(tsibble)
library(fable)
install.packages("fable")
knitr::opts_chunk$set(echo = TRUE)
library(tibble)
library(ggplot2)
library(lubridate)
library(tidyr)
library(dplyr)
library(tsibble)
library(fable)
library(fabletools)
library(feasts)
install.packages("feasts")
install.packages("feasts")
install.packages(tsibbledata)
install.packages("tsibbledata")
install.packages("fpp3")
knitr::opts_chunk$set(echo = TRUE)
library(tibble)
library(ggplot2)
library(lubridate)
library(tidyr)
library(dplyr)
library(tsibble)
library(fable)
library(fabletools)
library(feasts)
library(tsibbledata)
library(fpp3)
data <- read.csv("E:\\EAS 509\\Final Exam\\us_employment.csv")
data <- subset(data, Series_ID == "TEMPHELPN")
data <- na.omit(data)
stl <- data %>%
model(stl = STL(Employed))
data <- read.csv("E:\\EAS 509\\Final Exam\\us_employment.csv")
data <- subset(data, Series_ID == "TEMPHELPN")
data <- na.omit(data)
data <- as_tsibble(data)
data <- read.csv("E:\\EAS 509\\Final Exam\\us_employment.csv")
data <- subset(data, Series_ID == "TEMPHELPN")
data <- na.omit(data)
data <- as_tsibble(data, key = Series_ID)
data <- read.csv("E:\\EAS 509\\Final Exam\\us_employment.csv")
data <- subset(data, Series_ID == "TEMPHELPN")
data <- na.omit(data)
data <- as_tsibble(data, key = Series_ID, index = Month)
data <- read.csv("E:\\EAS 509\\Final Exam\\us_employment.csv")
data <- subset(data, Series_ID == "TEMPHELPN")
data <- na.omit(data)
data <- as_tsibble(data, key = Series_ID) %>%
index_by(Month ~ as_data("%Y %b"))
data <- read.csv("E:\\EAS 509\\Final Exam\\us_employment.csv")
data <- subset(data, Series_ID == "TEMPHELPN")
data <- na.omit(data)
#data <- as_tsibble(data, key = Series_ID) %>%
#  index_by(Month ~ as_data("%Y %b"))
data %>%
mutate(date=yearmonth(Month)) %>%
tsibble(index=date) ->
data
head(data)
data <- read.csv("E:\\EAS 509\\Final Exam\\us_employment.csv")
data <- subset(data, Series_ID == "TEMPHELPN")
data <- na.omit(data)
#data <- as_tsibble(data, key = Series_ID) %>%
#  index_by(Month ~ as_data("%Y %b"))
data %>%
mutate(Month=yearmonth(Month)) %>%
tsibble(index=date) ->
data
data <- read.csv("E:\\EAS 509\\Final Exam\\us_employment.csv")
data <- subset(data, Series_ID == "TEMPHELPN")
data <- na.omit(data)
#data <- as_tsibble(data, key = Series_ID) %>%
#  index_by(Month ~ as_data("%Y %b"))
data %>%
mutate(Month=yearmonth(Month)) %>%
tsibble(index=Month) ->
data
head(data)
stl <- data %>%
model(stl = STL(Employed))
components(stl)
library(RcwlPipelines)
library(BiocParallel)
install.packages("RcwlPipelines")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("RcwlPipelines")
library(RcwlPipelines)
library(BiocParallel)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("RcwlPipelines")
library(RcwlPipelines)
library(BiocParallel)
cwlUpdate()
RcwlUpdate()
install.packages("xfun")
data <- read.csv("example_data.csv")
data <- read.csv("C:\\Users\\sy43548\\OneDrive - Roswell Park Comprehensive Cancer Center\\Documents\\hotSPOT\\example_data.csv")
colnames(data) <- c("chr", "pos", "gene")
data
load("~/hotSPOT/.RData")
save(data, file = "C:\\Users\\sy43548\\OneDrive - Roswell Park Comprehensive Cancer Center\\Documents\\hotSPOT\\example_data.RData.csv")
save(data, file = "C:\\Users\\sy43548\\OneDrive - Roswell Park Comprehensive Cancer Center\\Documents\\hotSPOT\\example_data.RData")
#data <- read.csv("C:\\Users\\sy43548\\OneDrive - Roswell Park Comprehensive Cancer Center\\Documents\\hotSPOT\\example_data.csv")
data <- load(example_data.RData)
setwd("~/hotSPOT/vignettes")
#data <- read.csv("C:\\Users\\sy43548\\OneDrive - Roswell Park Comprehensive Cancer Center\\Documents\\hotSPOT\\example_data.csv")
data <- load(example_data.RData)
setwd("~/hotSPOT")
#data <- read.csv("C:\\Users\\sy43548\\OneDrive - Roswell Park Comprehensive Cancer Center\\Documents\\hotSPOT\\example_data.csv")
data <- load(example_data.RData)
getwd()
#data <- read.csv("C:\\Users\\sy43548\\OneDrive - Roswell Park Comprehensive Cancer Center\\Documents\\hotSPOT\\example_data.csv")
data <- load("example_data.RData")
#data <- read.csv("C:\\Users\\sy43548\\OneDrive - Roswell Park Comprehensive Cancer Center\\Documents\\hotSPOT\\example_data.csv")
data <- load("/example_data.RData")
#data <- read.csv("C:\\Users\\sy43548\\OneDrive - Roswell Park Comprehensive Cancer Center\\Documents\\hotSPOT\\example_data.csv")
data <- load("example_data.RData")
colnames(data) <- c("chr", "pos", "gene")
data <- load(example_data.RData)
#data <- read.csv("C:\\Users\\sy43548\\OneDrive - Roswell Park Comprehensive Cancer Center\\Documents\\hotSPOT\\example_data.csv")
data <- load("example_data.RData")
colnames(data) <- c("chr", "pos", "gene")
setwd("~/hotSPOT/vignettes")
#data <- read.csv("C:\\Users\\sy43548\\OneDrive - Roswell Park Comprehensive Cancer Center\\Documents\\hotSPOT\\example_data.csv")
data <- load("example_data.RData")
colnames(data) <- c("chr", "pos", "gene")
#data <- read.csv("C:\\Users\\sy43548\\OneDrive - Roswell Park Comprehensive Cancer Center\\Documents\\hotSPOT\\example_data.csv")
data <- load("example_data.rdata")
colnames(data) <- c("chr", "pos", "gene")
#data <- read.csv("C:\\Users\\sy43548\\OneDrive - Roswell Park Comprehensive Cancer Center\\Documents\\hotSPOT\\example_data.csv")
load("example_data.rdata")
colnames(data) <- c("chr", "pos", "gene")
data
View(data)
#data <- read.csv("C:\\Users\\sy43548\\OneDrive - Roswell Park Comprehensive Cancer Center\\Documents\\hotSPOT\\example_data.csv")
load("example_data.rdata")
colnames(data) <- c("chr", "pos", "gene")
data
load("example_data.rdata")
#data <- read.csv("C:\\Users\\sy43548\\OneDrive - Roswell Park Comprehensive Cancer Center\\Documents\\hotSPOT\\example_data.csv")
load("example_data.rdata")
colnames(data) <- c("chr", "pos", "gene")
data
#data <- read.csv("C:\\Users\\sy43548\\OneDrive - Roswell Park Comprehensive Cancer Center\\Documents\\hotSPOT\\example_data.csv")
load("example_data.rdata")
#colnames(data) <- c("chr", "pos", "gene")
#data
View(data)
data <- read.csv("C:\\Users\\sy43548\\OneDrive - Roswell Park Comprehensive Cancer Center\\Documents\\hotSPOT\\example_data.csv")
#load("example_data.rdata")
#colnames(data) <- c("chr", "pos", "gene")
#data
View(data)
colnames(data) <- c("chr", "pos", "gene")
save(data, file = "example.RData")
#data <- read.csv("C:\\Users\\sy43548\\OneDrive - Roswell Park Comprehensive Cancer Center\\Documents\\hotSPOT\\example_data.csv")
load("example.RData")
#colnames(data) <- c("chr", "pos", "gene")
#data
View(data)
#data <- read.csv("C:\\Users\\sy43548\\OneDrive - Roswell Park Comprehensive Cancer Center\\Documents\\hotSPOT\\example_data.csv")
load("example.RData")
#colnames(data) <- c("chr", "pos", "gene")
#data
View(data)
R CMD check
BiocCheck::BiocCheck('hotSPOT' = TRUE)
setwd("~/hotSPOT")
BiocCheck::BiocCheck('hotSPOT' = TRUE)
roxygen2::roxygenize()
roxygen2::roxygenize()
roxygen2::roxygenize()
roxygen2::roxygenize()
BiocCheck::BiocCheck('hotSPOT' = TRUE)
available::available_on_bioc("hotSPOT")
available::available_on_cran("hotSPOT")
BiocCheck::BiocCheckGitClone()
BiocCheck::BiocCheckGitClone()
BiocCheck::BiocCheckGitClone()
BiocCheck::BiocCheckGitClone()
BiocCheck::BiocCheckGitClone()
BiocCheck::BiocCheckGitClone()
BiocCheck::BiocCheckGitClone()
BiocCheck::BiocCheckGitClone("seq.hotSPOT")
BiocCheck::BiocCheckGitClone("seq.hotSPOT")
hidden_file_ext = c(".renviron", ".rprofile", ".rproj", ".rproj.user",
".rhistory", ".rapp.history",
".o", ".sl", ".so", ".dylib",
".a", ".dll", ".def",
".ds_store", "unsrturl.bst",
".log", ".aux",
".backups", ".cproject", ".directory",
".dropbox", ".exrc", ".gdb.history",
".gitattributes", ".gitmodules",
".hgtags",
".project", ".seed", ".settings", ".tm_properties")
BiocCheck::BiocCheckGitClone()
BiocCheck::BiocCheckGitClone()
BiocCheck::BiocCheckGitClone()
BiocCheck::BiocCheckGitClone()
BiocCheck::BiocCheckGitClone()
BiocCheck::BiocCheckGitClone()
BiocCheck::BiocCheckGitClone()
BiocCheck::BiocCheckGitClone()
BiocCheck::BiocCheckGitClone()
BiocCheck::BiocCheck('seq.hotSPOT' = TRUE)
BiocCheck::BiocCheckGitClone()
